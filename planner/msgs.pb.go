// Code generated by protoc-gen-go.
// source: msgs.proto
// DO NOT EDIT!

/*
Package planner is a generated protocol buffer package.

It is generated from these files:
	msgs.proto

It has these top-level messages:
	Message
	TaskResponse
	SqlTask
*/
package planner

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Msg  []byte `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Message) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type TaskResponse struct {
	Id  string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *TaskResponse) Reset()                    { *m = TaskResponse{} }
func (m *TaskResponse) String() string            { return proto.CompactTextString(m) }
func (*TaskResponse) ProtoMessage()               {}
func (*TaskResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TaskResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaskResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SqlTask struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Pb         []byte `protobuf:"bytes,2,opt,name=pb,proto3" json:"pb,omitempty"`
	Partition  string `protobuf:"bytes,3,opt,name=partition" json:"partition,omitempty"`
	Source     string `protobuf:"bytes,4,opt,name=source" json:"source,omitempty"`
	ActorCount int32  `protobuf:"varint,5,opt,name=actorCount" json:"actorCount,omitempty"`
	// The name of the mailbox that contains
	// the master task process to send results to
	Master string `protobuf:"bytes,6,opt,name=master" json:"master,omitempty"`
}

func (m *SqlTask) Reset()                    { *m = SqlTask{} }
func (m *SqlTask) String() string            { return proto.CompactTextString(m) }
func (*SqlTask) ProtoMessage()               {}
func (*SqlTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SqlTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SqlTask) GetPb() []byte {
	if m != nil {
		return m.Pb
	}
	return nil
}

func (m *SqlTask) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *SqlTask) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *SqlTask) GetActorCount() int32 {
	if m != nil {
		return m.ActorCount
	}
	return 0
}

func (m *SqlTask) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "planner.Message")
	proto.RegisterType((*TaskResponse)(nil), "planner.TaskResponse")
	proto.RegisterType((*SqlTask)(nil), "planner.SqlTask")
}

func init() { proto.RegisterFile("msgs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xb1, 0x6a, 0xc4, 0x30,
	0x10, 0x44, 0x91, 0xee, 0xce, 0xc6, 0xcb, 0x71, 0x84, 0x2d, 0x82, 0x8a, 0x10, 0xcc, 0x55, 0xae,
	0x92, 0x40, 0x3e, 0x21, 0x75, 0x1a, 0x25, 0x3f, 0x20, 0xdb, 0x8b, 0x11, 0xb1, 0x25, 0x45, 0x2b,
	0x17, 0xf9, 0x92, 0xfc, 0x6e, 0xb0, 0x6c, 0x88, 0xe1, 0xba, 0x99, 0xd9, 0x79, 0x5b, 0x0c, 0xc0,
	0xc4, 0x03, 0x3f, 0x85, 0xe8, 0x93, 0xc7, 0x32, 0x8c, 0xc6, 0x39, 0x8a, 0xd7, 0x67, 0x28, 0xdf,
	0x89, 0xd9, 0x0c, 0x84, 0x08, 0xc7, 0xf4, 0x13, 0x48, 0x89, 0x5a, 0x34, 0x95, 0xce, 0x1a, 0xef,
	0xe0, 0x30, 0xf1, 0xa0, 0x64, 0x2d, 0x9a, 0xb3, 0x5e, 0xe4, 0xf5, 0x05, 0xce, 0x9f, 0x86, 0xbf,
	0x34, 0x71, 0xf0, 0x8e, 0x09, 0x2f, 0x20, 0x6d, 0xbf, 0x31, 0xd2, 0xf6, 0x7b, 0xa2, 0x5a, 0x89,
	0x5f, 0x01, 0xe5, 0xc7, 0xf7, 0xb8, 0x50, 0x37, 0xed, 0x0b, 0xc8, 0xd0, 0x6e, 0xef, 0x65, 0x68,
	0xf1, 0x01, 0xaa, 0x60, 0x62, 0xb2, 0xc9, 0x7a, 0xa7, 0x0e, 0xb9, 0xf6, 0x1f, 0xe0, 0x3d, 0x14,
	0xec, 0xe7, 0xd8, 0x91, 0x3a, 0xe6, 0xd3, 0xe6, 0xf0, 0x11, 0xc0, 0x74, 0xc9, 0xc7, 0x37, 0x3f,
	0xbb, 0xa4, 0x4e, 0xb5, 0x68, 0x4e, 0x7a, 0x97, 0x2c, 0xdc, 0x64, 0x38, 0x51, 0x54, 0xc5, 0xca,
	0xad, 0xae, 0x2d, 0xf2, 0x18, 0xaf, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x8e, 0x9a, 0x66,
	0x1a, 0x01, 0x00, 0x00,
}
